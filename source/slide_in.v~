module slide_in(

		input [9:0]  SW,
		
		output [7:0] HEX5,
		output [7:0] HEX4,
		output [7:0] HEX3,
		output [7:0] HEX2,
		output [3:0] x,
		output [3:0] y
);

   
   assign x[0] = SW[7];
   assign x[1] = SW[6];
   assign x[2] = SW[5];
   assign x[3] = SW[4];

   assign y[0] = SW[3];
   assign y[1] = SW[2];
   assign y[2] = SW[1];
   assign y[3] = SW[0];

	
	
   hex_driver H5 (
		  .SIGN(x[0]),
		  .OFF(~x[0]),
		  .HEX (HEX5)
		  );
		  
	hex_driver H5 (
		  .SIGN(y[0]),
		  .OFF(~y[0]),
		  .HEX (HEX3)
		  );
		  
// Convert 3 bit x&y 2's complement to 4 bit number
		  always @(x, y)
		  begin
			
		  end
		  
		  
		  
   hex_driver H4 (
		  .NUM (), //dec x
		  .HEX (HEX4)
		  );
		  
	hex_driver H4 (
		  .NUM (), //dec y
		  .HEX (HEX2)
		  );
   
   
endmodule // slide_in
